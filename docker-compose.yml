services:
   auth:
      container_name: auth
      build:
         context: .
         dockerfile: ./apps/auth/Dockerfile
         target: development
      command: npm run start:dev auth
      env_file:
         - ./apps/auth/.env
      depends_on:
         - mongodb-primary
         - mongodb-secondary
         - mongodb-arbiter
         - rabbitmq
      volumes:
         - .:/usr/src/app
         - /usr/src/app/node_modules
      ports:
         - 3001:3001
      networks:
         - common

   product:
      container_name: product
      build:
         context: .
         dockerfile: ./apps/product/Dockerfile
         target: development
      command: npm run start:dev product
      env_file:
         - ./apps/product/.env
      depends_on:
         - mongodb-primary
         - mongodb-secondary
         - mongodb-arbiter
         - rabbitmq
         - auth
      volumes:
         - .:/usr/src/app
         - /usr/src/app/node_modules
      ports:
         - 3002:3002
      networks:
         - common

   rabbitmq:
      container_name: rabbitmq
      image: rabbitmq
      ports:
         - 5672:5672
      networks:
         - common

   mongodb-primary:
      container_name: mongodb-primary
      image: mongo
      volumes:
         - mongodb_master_data:/data/db
         - ./scripts/rs-init.sh:/scripts/rs-init.sh
      networks:
         - common
      ports:
         - 27017:27017
      links:
         - mongodb-secondary
         - mongodb-arbiter
      restart: always
      entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs']

   mongodb-secondary:
      container_name: mongodb-secondary
      image: mongo
      networks:
         - common
      ports:
         - 27018:27017
      restart: always
      entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs']

   mongodb-arbiter:
      container_name: mongodb-arbiter
      image: mongo
      networks:
         - common
      ports:
         - 27019:27017
      restart: always
      entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'dbrs']

volumes:
   mongodb_master_data:
      driver: local

networks:
   common:
