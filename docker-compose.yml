services:
   user:
      build:
         context: .
         dockerfile: ./apps/user/.dockerfile
         target: development
      command: npm run start:dev user
      env_file:
         - ./apps/user/.env
      depends_on:
         - mongodb-primary
         - mongodb-secondary
         - mongodb-arbiter
         - rabbitmq
      volumes:
         - .:/usr/src/app
         - /usr/src/app/node_modules
      ports:
         - '3001:3001'

   rabbitmq:
      image: rabbitmq
      ports:
         - '5672:5672'

   mongodb-primary:
      image: docker.io/bitnami/mongodb:7.0
      environment:
         - MONGODB_ADVERTISED_HOSTNAME=mongodb-primary
         - MONGODB_REPLICA_SET_MODE=primary
         - MONGODB_ROOT_PASSWORD=password123
         - MONGODB_REPLICA_SET_KEY=replicasetkey123
      volumes:
         - 'mongodb_master_data:/bitnami/mongodb'

   mongodb-secondary:
      image: docker.io/bitnami/mongodb:7.0
      depends_on:
         - mongodb-primary
      environment:
         - MONGODB_ADVERTISED_HOSTNAME=mongodb-secondary
         - MONGODB_REPLICA_SET_MODE=secondary
         - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
         - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
         - MONGODB_REPLICA_SET_KEY=replicasetkey123

   mongodb-arbiter:
      image: docker.io/bitnami/mongodb:7.0
      depends_on:
         - mongodb-primary
      environment:
         - MONGODB_ADVERTISED_HOSTNAME=mongodb-arbiter
         - MONGODB_REPLICA_SET_MODE=arbiter
         - MONGODB_INITIAL_PRIMARY_HOST=mongodb-primary
         - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=password123
         - MONGODB_REPLICA_SET_KEY=replicasetkey123

volumes:
   mongodb_master_data:
      driver: local
